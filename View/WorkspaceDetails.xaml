<Window x:Class="View.WorkspaceDetails"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:View"
        xmlns:converters="clr-namespace:ViewModel.Converters;assembly=ViewModel"
        mc:Ignorable="d"
        Title="WorkspaceDetails" Height="500" Width="800" MinHeight="500" MinWidth="800">
    <Window.Resources>
        <ResourceDictionary>
            <converters:ObjectNullConverter x:Key="HasValueConverter" />
        </ResourceDictionary>
    </Window.Resources>
    
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>

        <StackPanel Grid.Column="0" Orientation="Vertical" VerticalAlignment="Center" >
            <Label>Name:</Label>
            <TextBox x:Name="WorkspaceNameTextBox" Margin="10,0,10,10" Text="{Binding Workspace.Name}"/>

            <Label>Description:</Label>
            <TextBox x:Name="WorkspaceDescriptionTextBox" Margin="10,0,10,10" MinLines="2" Text="{Binding Workspace.Description}" />

            <Label>Customer:</Label>
            <TextBox x:Name="WorkspaceCustomerTextBox" Margin="10,0,10,10" Text="{Binding Workspace.Customer}"/>

            <Label>Due date:</Label>
            <DatePicker x:Name="WorkspaceDueDateDatePicker" Margin="10,0,10,10" SelectedDate="{Binding Workspace.DueDate}" />

            <Label>Day of arrival:</Label>
            <DatePicker x:Name="WorkspaceDueDayOfArrival" Margin="10,0,10,10" SelectedDate="{Binding Workspace.DayOfArrival}" />

            <Label>Price:</Label>
            <TextBox x:Name="WorkspacePrice" Margin="10,0,10,10" Text="{Binding Workspace.Price}"/>

            <Label>Current status:</Label>
            <Grid Margin="10,0,10,10">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <TextBox Grid.Column="0" x:Name="WorkspaceCurrentStatus" Text="{Binding Workspace.CurrentStatus.Name}" IsEnabled="False"></TextBox>
                <Button x:Name="EditWorkspaceStatusButton" Grid.Column="1" IsEnabled="{Binding ExistingWorkspace}" Click="EditWorkspaceStatusButton_Click">Edit</Button>
            </Grid>

            <Button x:Name="SaveWorkspaceButton" Click="SaveWorkspaceButton_Click" Margin="10,0,10,0" Width="240">Save workspace</Button>
            <Button x:Name="BackToWorkspaceOverViewButton" Click="BackToWorkspaceOverViewButton_Click" Margin="10,10,10,0" Width="240">Back to workspace overview</Button>

        </StackPanel>

        <Grid Grid.Column="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="2*" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>


            <TreeView Name="MaterialSamplesTreeView" Grid.Row="0" Margin="10" ItemsSource="{Binding MaterialSamplesMeasurements}" 
                      SelectedItemChanged="TreeView_SelectedItemChanged" MouseDoubleClick="TreeView_MouseDoubleClick">
                <!--
                <TreeView.Resources>
                    <Style TargetType="{x:Type TreeViewItem}">
                        <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}"/>
                    </Style>
                </TreeView.Resources>
                 -->
                <TreeView.ItemTemplate>
                    <HierarchicalDataTemplate ItemsSource="{Binding Measurements}">
                        <TextBlock Foreground="Red" Text="{Binding MaterialSample.Label}" />
                        <HierarchicalDataTemplate.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Name}" />
                            </DataTemplate>
                        </HierarchicalDataTemplate.ItemTemplate>
                    </HierarchicalDataTemplate>
                </TreeView.ItemTemplate>
            </TreeView>

            <Grid Grid.Row="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>

                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>

                <Button x:Name="NewMaterialSampleButton" Grid.Column="0" Grid.Row="0" Margin="10,15,10,15"
                        Click="NewMaterialSampleButton_Click" IsEnabled="{Binding ExistingWorkspace}">New material sample</Button>
                <Button x:Name="EditMaterialSampleButton" Grid.Column="1" Grid.Row="0" Margin="10,15,10,15"
                        Click="EditMaterialSampleButton_Click" IsEnabled="{Binding SelectedMaterialSample, Converter={StaticResource HasValueConverter}}">Edit material sample</Button>

                <Button x:Name="NewMeasurementButton" Grid.Column="0" Grid.Row="1" Margin="10,15,10,15" 
                        Click="NewMeasurementButton_Click" IsEnabled="{Binding SelectedMaterialSample, Converter={StaticResource HasValueConverter}}">New measurement</Button>
                <Button x:Name="EditMeasurementButton" Grid.Column="1" Grid.Row="1" Margin="10,15,10,15"
                        Click="EditMeasurementButton_Click" IsEnabled="{Binding SelectedMeasurement, Converter={StaticResource HasValueConverter}}">Edit measurement</Button>

                <Button x:Name="OpenMeasurement" Grid.Column="0" Grid.Row="2" Grid.ColumnSpan="2" Margin="10,15,10,15"
                        Click="OpenMeasurement_Click" IsEnabled="{Binding SelectedMeasurement, Converter={StaticResource HasValueConverter}}">Open measurement</Button>
            </Grid>
        </Grid>
    </Grid>
</Window>
